import pygame
from graphic_engine import GraphicEngine
from track import Track
import numpy as np
import robot
import robot_controller


pygame.init()

width, height = 1024, 768
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption('Open Polygon')

ge = GraphicEngine(screen, 1024, 768)
ge.camera_FOV = 6
ge.camera_pos = [0, 1]

genotype = np.array([-0.66917691,  1.83762827, -1.73548405, -1.3260607 , -1.38538713,
       -0.15205125,  0.45086742, -2.41531704, -0.44149671,  1.24576104,
        1.27363317,  0.44081893,  0.29558417,  0.26893347,  1.26229149,
        0.93122572, -0.78493955,  0.74024226, -0.65052616,  1.19755162,
       -0.57313635,  0.35626944,  1.44169886, -0.28175796, -0.97631152,
        0.12153338, -0.77527804,  0.4628478 , -0.6288532 , -0.90538197,
        1.15357883, -2.09197487, -0.69544362, -0.01720866,  0.4195042 ,
       -1.60601934,  1.27589918, -0.87247935,  0.06848557, -0.21853031,
        0.50615527, -0.45709452, -1.24575963, -0.66916634, -0.37624057,
       -0.11350659, -1.4653612 , -0.89556168,  0.52740277, -0.65250219,
        2.08774452, -0.57917663, -0.77439343,  1.74591969,  0.51098651,
       -1.21278477, -0.78986522, -2.49876337, -0.36292479,  0.01244837,
        0.32707642, -0.28194625,  0.66514099,  2.4714707 , -0.38023903,
        1.12441023, -0.33342942,  1.41304379, -2.04222302,  1.49106652,
       -1.07392924, -0.00849496,  0.67944691, -1.27312356,  0.93949603,
        0.33946733, -0.2589027 , -0.95783889,  1.83623337, -0.18803479,
        0.38735656,  1.17598608,  0.06291137,  0.00589293,  1.03100237,
        0.98633778,  0.99790723,  0.51459596,  1.25085653,  2.05708833,
        0.0859176 , -0.07474495,  0.09433616, -1.44093957, -0.98075146,
       -1.39298986,  1.30056011, -0.06411856,  1.14551504, -1.37323663,
       -1.2335347 ,  0.09314857, -0.12414194, -1.04170874,  1.04610108,
       -1.0079453 ,  0.82588979,  0.32613535, -0.30318598, -0.71740038,
        1.15183062, -1.34773286,  0.19493263, -0.95666985, -0.49135809,
        0.01428935, -0.69252261,  1.03688733, -1.30664159,  0.20818523,
       -0.47936084,  1.22401349,  0.4092959 , -0.77454608, -1.03422095,
       -0.64060361,  0.62409356,  0.6422564 ,  0.98836038,  0.87289395,
        1.02488859,  0.71206139,  1.42065577,  0.53183463,  0.86897902,
       -0.3248557 , -1.85898172,  0.06419477, -1.20257118, -0.36319819,
        1.18454973,  0.22824412, -0.61995148,  0.0081279 , -0.08508445,
       -0.22241606, -0.83917914, -2.10765214, -0.39381299,  2.56149869,
       -1.18989356, -0.02599277,  2.25373747, -0.76219597, -0.90502592,
        0.81428376, -0.11565127,  0.42673216, -0.67661538,  0.43027261,
       -0.50477518, -0.02236016,  0.57092329,  1.0214512 ,  0.42933641,
        0.65692595, -0.89697542, -1.62545013,  0.02456701,  0.39387884])


c = robot_controller.RobotController(genotype)
r = robot.Robot()

t = Track()
t.add_segment("straight")
for i in range(35):
    t.add_segment("")

clock = pygame.time.Clock()
running = True
travelled_distance = 0
i = 0
s = 0
dt = 1/200
while running:
    screen.fill((0, 0, 0))

    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    inputs = np.array(r.get_sensors(t))
    e1, e2 = c.get_motors(inputs)
    ds = r.move(e1, e2, dt)
    s += ds
    print(np.round(ds / dt, 2))
    ge.draw_track(t)
    r.draw(ge)
    pygame.display.flip()
    clock.tick(60)


pygame.quit()
