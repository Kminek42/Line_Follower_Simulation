import pygame
from graphic_engine import GraphicEngine
from track import Track
import numpy as np
import robot
import robot_controller


pygame.init()

width, height = 1024, 768
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption('Open Polygon')

ge = GraphicEngine(screen, 1024, 768)
ge.camera_FOV = 6
ge.camera_pos = [0, 1]

genotype = np.array([-0.66917691,  0.70149235, -0.12809621, -0.8207069 , -1.38538713,
       -0.15205125,  0.45086742, -2.41531704, -0.44149671,  1.24576104,
       -0.93162078,  0.44081893,  0.29558417, -0.60349844,  1.26229149,
        0.35828321,  1.9061917 ,  0.41033456,  0.57339932, -1.46908397,
       -0.17228838,  0.35626944, -0.58282512, -0.28175796, -0.97631152,
        0.12153338, -0.62142513, -0.56849623, -0.6288532 ,  0.32087183,
        0.07808872, -2.09197487, -0.22597434, -0.01720866, -1.56850801,
       -1.60601934,  0.92534175,  0.47984981,  0.06848557, -0.21853031,
        0.50615527,  0.10594972, -1.24575963, -0.66916634,  1.66898518,
       -0.11350659, -1.4653612 , -1.14434226,  0.52740277, -0.65250219,
        0.56460757, -0.1841988 , -0.77439343, -0.14805491, -0.52999734,
       -1.21278477, -0.78986522, -2.49876337, -0.36292479, -0.73886266,
       -1.00230648, -2.0410397 , -0.38779263, -0.01288555, -1.11676745,
        1.12441023, -1.35216052,  1.41304379, -2.04222302,  1.49106652,
       -1.26401672, -0.00849496,  0.82507051, -1.27312356,  0.09656158,
        0.33946733, -0.2589027 , -0.63304811,  1.83623337, -0.18803479,
        0.45890665,  1.17598608, -0.3814249 , -0.21353335,  1.03100237,
        0.98633778,  0.99790723,  0.51459596, -0.77738455,  0.66631417,
       -1.04777444, -0.07474495,  0.09433616, -1.44093957, -0.54227721,
       -1.39298986,  1.30056011, -0.06411856,  1.14551504, -1.37323663,
        1.43474889,  0.09314857, -0.12414194, -1.04170874,  1.55212435,
        0.37962718,  0.82588979,  0.32613535, -0.30318598, -0.71740038,
        1.15183062, -1.34773286,  0.19493263, -0.95666985, -0.49135809,
        0.01428935, -0.69252261,  1.03688733, -0.28436157,  0.20818523,
       -0.47936084,  1.22401349,  0.4092959 , -0.77454608,  1.78962517,
       -0.4253435 , -0.28560219,  0.6422564 ,  0.98836038,  0.87289395,
        1.02488859,  0.71206139,  1.42065577,  0.53183463,  0.86897902,
       -0.29212697, -1.85898172,  0.06419477, -1.20257118, -0.29697319,
        1.18454973,  0.22824412, -0.61995148,  0.0081279 ,  0.1584938 ,
       -0.22241606, -0.83917914, -2.10765214, -0.14538052,  2.56149869,
       -1.18989356, -0.64528799,  2.25373747, -0.76219597, -0.90502592,
        0.81428376, -0.11565127,  0.42673216, -0.67661538,  0.43027261,
       -1.25875145, -0.93620104,  0.57092329,  1.0214512 ,  0.42933641,
        0.65692595, -0.89697542, -1.62545013,  0.02456701,  0.39387884])


c = robot_controller.RobotController(genotype)
r = robot.Robot()

t = Track()
t.add_segment("straight")
for i in range(35):
    t.add_segment("")

clock = pygame.time.Clock()
running = True
travelled_distance = 0
i = 0
s = 0
dt = 1/200
while running:
    screen.fill((0, 0, 0))

    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    inputs = np.array(r.get_sensors(t))
    e1, e2 = c.get_motors(inputs)
    ds = r.move(e1, e2, dt)
    s += ds
    print(np.round(ds / dt, 2))
    ge.draw_track(t)
    r.draw(ge)
    pygame.display.flip()
    clock.tick(60)


pygame.quit()
